# Withdrawing the admin badge from the admin account. When we call the `create_proof` methods on the account component
# the returned proof is automatically put in our auth zone so we do not need to manually manage it.
CALL_METHOD 
    ComponentAddress("02dbbcc440e1f4b402675af83b2f39220cfa2ea77a4ad890cd8252") 
    "create_proof" 
    ResourceAddress("0348f108a0547415af8fce557eff99919182b847f000d94fe77dac");

# Withdrawing the tokens which we would like to be vested for the beneficiary. In this case, we would like to vest 
# 1,000,000 USDT tokens for the beneficiary over a period of 100 epochs with a 20 epoch cliff. 
CALL_METHOD 
    ComponentAddress("02dbbcc440e1f4b402675af83b2f39220cfa2ea77a4ad890cd8252") 
    "withdraw_by_amount" 
    Decimal("1000000") 
    ResourceAddress("03e7fb5c8a7bced5cac1a57a162d41df2bb0a7ef450e5ce956ea01");
TAKE_FROM_WORKTOP 
    ResourceAddress("03e7fb5c8a7bced5cac1a57a162d41df2bb0a7ef450e5ce956ea01") 
    Bucket("usdt_tokens");

# Adding the beneficiary to the vesting component
CALL_METHOD 
    ComponentAddress("02e738d5599519da42c64207918cf1a0c6339d4291bf60c38aeb48") 
    "add_beneficiary" 
    Bucket("usdt_tokens") 20u64 100u64 Decimal("0.2");

# The above method call returns a a beneficiary badge. We now need to take that badge from the transaction worktop and 
# into a bucket to then send it to the beneficiary
TAKE_FROM_WORKTOP 
    ResourceAddress("039914be1f6858e617c19338bde9d54a81013b62b096c387b96c0b") 
    Bucket("beneficiary_badge");
CALL_METHOD 
    ComponentAddress("02c026ae65349ab7f248eebfd40cfcb3c7804b1aab4f1c177d9dca") 
    "deposit" 
    Bucket("beneficiary_badge");

# After the beneficiary's badge has been sent to their account, we deposit all remaining items in the transaction 
# worktop into the admin account
CALL_METHOD_WITH_ALL_RESOURCES 
    ComponentAddress("02dbbcc440e1f4b402675af83b2f39220cfa2ea77a4ad890cd8252") 
    "deposit_batch";